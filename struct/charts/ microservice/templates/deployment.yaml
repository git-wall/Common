apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.service.name }}
    version: {{ .Values.image.tag }}
    environment: {{ .Values.global.environment }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        version: {{ .Values.image.tag }}
    spec:
      containers:
        - name: {{ .Values.service.name }}
          image: "{{ .Values.global.imageRegistry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthCheck.livenessProbe | nindent 10 }}
          readinessProbe:
            {{- toYaml .Values.healthCheck.readinessProbe | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 10 }}
          env:
            {{- toYaml .Values.env | nindent 10 }}
          {{- if .Values.configMap.enabled }}
          envFrom:
            - configMapRef:
                name: {{ .Values.service.name }}-config
          {{- end }}
          {{- if .Values.secrets.enabled }}
          - secretRef:
          name: {{ .Values.service.name }}-secret
          {{- end }}
